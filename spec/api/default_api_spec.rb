=begin
#Mautic API docs

#Auto-generated Swagger documentation.

OpenAPI spec version: 3.0.0

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.14

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::DefaultApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'DefaultApi' do
  before do
    # run before each test
    @instance = SwaggerClient::DefaultApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of DefaultApi' do
    it 'should create an instance of DefaultApi' do
      expect(@instance).to be_instance_of(SwaggerClient::DefaultApi)
    end
  end

  # unit tests for api_assets_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_assets_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_assets_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_campaign_id_events_contact_contact_id_get
  # Get a list of events.
  # @param campaign_id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_campaign_id_events_contact_contact_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_clone_campaign_id_post
  # @param campaign_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_clone_campaign_id_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_events_batch_edit_put
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_events_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_events_contact_contact_id_get
  # Get a list of events.
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_events_contact_contact_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_events_event_id_contact_contact_id_edit_put
  # @param event_id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_events_event_id_contact_contact_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_events_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_events_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_events_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_events_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_id_contact_lead_id_add_post
  # Adds a lead to a campaign.
  # @param id 
  # @param lead_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_id_contact_lead_id_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_id_contact_lead_id_remove_post
  # Removes given lead from a campaign.
  # @param id 
  # @param lead_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_id_contact_lead_id_remove_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_id_contacts_get
  # Obtains a list of campaign contacts.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_id_contacts_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_campaigns_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_campaigns_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_categories_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_categories_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_company_id_contact_contact_id_add_post
  # Adds a contact to a company.
  # @param company_id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_company_id_contact_contact_id_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_company_id_contact_contact_id_remove_post
  # Removes given contact from a company.
  # @param company_id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_company_id_contact_contact_id_remove_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_companies_new_post
  # If an existing company is matched, it&#39;ll be merged. Otherwise it&#39;ll be created.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_companies_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_activity_get
  # Obtains a list of contact events.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_activity_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_activity_get
  # Obtains a list of contact events.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_activity_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_campaigns_get
  # Obtains a list of campaigns the lead is part of.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_campaigns_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_companies_get
  # Obtains a list of contact companies the contact is in.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_companies_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_devices_get
  # Obtains a list of devices on a specific lead.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_devices_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_dnc_channel_add_post
  # Adds a DNC to the contact.
  # @param id 
  # @param channel 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_dnc_channel_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_dnc_channel_remove_post
  # Removes a DNC from the contact.
  # @param id 
  # @param channel 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_dnc_channel_remove_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_notes_get
  # Obtains a list of notes on a specific lead.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_notes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_segments_get
  # Obtains a list of contact segments the contact is in.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_segments_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_utm_add_post
  # Adds a UTM Tagset to the contact.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_utm_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_id_utm_utmid_remove_post
  # Remove a UTM Tagset for the contact.
  # @param id 
  # @param utmid 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_id_utm_utmid_remove_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_lead_id_points_operator_delta_post
  # Subtract points from a lead.
  # @param lead_id 
  # @param operator 
  # @param delta 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_lead_id_points_operator_delta_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_list_fields_get
  # Obtains a list of custom fields.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_list_fields_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_list_owners_get
  # Obtains a list of users for lead owner edits.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_list_owners_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_list_segments_get
  # Obtains a list of smart lists for the user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_list_segments_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_contacts_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_contacts_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_data_get
  # Obtains a list of available widget types.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_data_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_data_type_get
  # Obtains a list of available widget types.
  # @param type 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_data_type_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_devices_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_devices_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_dynamiccontents_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_dynamiccontents_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_get
  # Obtains a list of emails.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_id_contact_lead_id_send_post
  # Sends the email to a specific lead.
  # @param id 
  # @param lead_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_id_contact_lead_id_send_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_id_send_post
  # Sends the email to it&#39;s assigned lists.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_id_send_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_emails_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_emails_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_batch_delete_delete
  # Delete a batch of entities.
  # @param object 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_batch_edit_patch
  # Edit a batch of entities.
  # @param object 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_batch_edit_put
  # Edit a batch of entities.
  # @param object 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_batch_new_post
  # Create a batch of new entities.
  # @param object 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_get
  # Obtains a list of entities as defined by the API URL.
  # @param object 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_id_delete_delete
  # Deletes an entity.
  # @param object 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param object 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param object 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param object 
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_fields_object_new_post
  # Creates a new entity.
  # @param object 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_fields_object_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_files_dir_file_delete_delete
  # Delete a file from /media directory.
  # @param dir 
  # @param file 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_files_dir_file_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_files_dir_get
  # List the files in /media directory.
  # @param dir 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_files_dir_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_files_dir_new_post
  # Uploads a file.
  # @param dir 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_files_dir_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_id_js_post
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_id_js_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_focus_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_focus_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_form_id_actions_delete_delete
  # Delete fields from a form.
  # @param form_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_form_id_actions_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_form_id_fields_delete_delete
  # Delete fields from a form.
  # @param form_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_form_id_fields_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_form_id_submissions_contact_contact_id_get
  # Obtains a list of entities for specific form and contact.
  # @param form_id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_form_id_submissions_contact_contact_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_form_id_submissions_get
  # Obtains a list of entities as defined by the API URL.
  # @param form_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_form_id_submissions_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_form_id_submissions_submission_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param form_id 
  # @param submission_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_form_id_submissions_submission_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_forms_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_forms_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_hooks_triggers_get
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_hooks_triggers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_messages_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_messages_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notes_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notes_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_notifications_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_notifications_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_get
  # Obtains a list of pages.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_pages_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_pages_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_actions_types_get
  # Return array of available point action types.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_actions_types_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_events_types_get
  # Return array of available point trigger event types.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_events_types_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_points_triggers_trigger_id_events_delete_delete
  # Delete events from a point trigger.
  # @param trigger_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_points_triggers_trigger_id_events_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_reports_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_reports_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_reports_id_get
  # Obtains a compiled report.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_reports_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_roles_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_roles_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_id_contact_lead_id_add_post
  # Adds a lead to a list.
  # @param id 
  # @param lead_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_id_contact_lead_id_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_id_contact_lead_id_remove_post
  # Removes given contact from a list.
  # @param id 
  # @param lead_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_id_contact_lead_id_remove_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_id_contacts_add_post
  # Adds a leads to a list.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_id_contacts_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_segments_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_segments_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_id_contact_contact_id_send_get
  # @param id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_id_contact_contact_id_send_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_smses_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_smses_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_id_contact_contact_id_add_post
  # Adds a contact to a list.
  # @param id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_id_contact_contact_id_add_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_id_contact_contact_id_remove_post
  # Removes given contact from a list.
  # @param id 
  # @param contact_id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_id_contact_contact_id_remove_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stages_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stages_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_stats_table_get
  # Lists stats for a database table.
  # @param table 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_stats_table_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tags_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tags_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_themes_get
  # List the folders (themes) in the /themes directory.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_themes_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_themes_new_post
  # Accepts the zip file and installs the theme from it.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_themes_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_themes_theme_delete_delete
  # Delete a theme.
  # @param theme 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_themes_theme_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_themes_theme_get
  # Get zip file of a theme.
  # @param theme 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_themes_theme_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_id_edit_patch
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_id_edit_put
  # Edits an existing entity or creates one on PUT if it doesn&#39;t exist.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_tweets_new_post
  # Creates a new entity.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_tweets_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_batch_delete_delete
  # Delete a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_batch_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_batch_edit_patch
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_batch_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_batch_edit_put
  # Edit a batch of entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_batch_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_batch_new_post
  # Create a batch of new entities.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_batch_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_get
  # Obtains a list of entities as defined by the API URL.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_id_delete_delete
  # Deletes an entity.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_id_delete_delete test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_id_edit_patch
  # Edits an existing user or creates a new one on PUT if not found.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_id_edit_patch test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_id_edit_put
  # Edits an existing user or creates a new one on PUT if not found.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_id_edit_put test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_id_get
  # Obtains a specific entity as defined by the API URL.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_id_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_id_permissioncheck_post
  # Verifies if a user has permission(s) to a action.
  # @param id 
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_id_permissioncheck_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_list_roles_get
  # Obtains a list of roles for user edits.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_list_roles_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_new_post
  # Creates a new user.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_new_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for api_users_self_get
  # Obtains the logged in user&#39;s data.
  # @param [Hash] opts the optional parameters
  # @return [nil]
  describe 'api_users_self_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
